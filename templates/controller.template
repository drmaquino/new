{{#if importDao}}
import { {{ nombreMinuscula }}Dao } from '../daos/{{ nombreMinuscula }}.dao.{{ daoType }}.js'

{{else if importRepository}}
import { {{ nombreMinuscula }}Repository } from '../repositories/{{ nombreMinuscula }}.repository.js'

{{/if}}
export async function handleGet(req, res, next) {
  try {
    if (req.params.id) {
      {{#if importDao}}
      const buscado = await {{ nombreMinuscula }}Dao.readOne({ id: req.params.id })
      res.json(buscado)
      {{else if importRepository}}
      const buscado = await {{ nombreMinuscula }}Repository.readOne({ id: req.params.id })
      res.json(buscado)
      {{else}}
      res.send('peticion "getById" recibida!')  
      {{/if}}
    } else {
      {{#if importDao}}
      const {{ nombreMinuscula }} = await {{ nombreMinuscula }}Dao.readMany(req.query)
      res.json({{ nombreMinuscula }})
      {{else if importRepository}}
      const {{ nombreMinuscula }} = await {{ nombreMinuscula }}Repository.readMany(req.query)
      res.json({{ nombreMinuscula }})
      {{else}}
      res.send('peticion "get" recibida!')
      {{/if}}
    }
  } catch (error) { 
    next(error)
  }
}

export async function handlePost(req, res, next) {
  try {
    {{#if importDao}}
    const creado = await {{ nombreMinuscula }}Dao.create(req.body)
    res.status(201).json(creado)
    {{else if importRepository}}
    const creado = await {{ nombreMinuscula }}Repository.create(req.body)
    res.status(201).json(creado)
    {{else}}
    res.send('peticion "post" recibida!')
    {{/if}}
  } catch (error) { 
    next(error)
  }
}

export async function handlePut(req, res, next) {
  try {
    {{#if importDao}}
    const actualizado = await {{ nombreMinuscula }}Dao.updateOne(req.params.id, req.body)
    res.json(actualizado)
    {{else if importRepository}}
    const actualizado = await {{ nombreMinuscula }}Repository.updateOne(req.params.id, req.body)
    res.json(actualizado)
    {{else}}
    res.send('peticion "put:id" recibida!')
    {{/if}}
  } catch (error) { 
    next(error)
  }
}

export async function handleDelete(req, res, next) {
  try {
    {{#if importDao}}
    const borrado = await {{ nombreMinuscula }}Dao.deleteOne(req.params.id)
    res.json(borrado)
    {{else if importRepository}}
    const borrado = await {{ nombreMinuscula }}Repository.deleteOne(req.params.id)
    res.json(borrado)
    {{else}}
    res.send('peticion "delete:id" recibida!')
    {{/if}}
  } catch (error) { 
    next(error)
  }
}